/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: true,
  swcMinify: true,
}

module.exports = nextConfig
{
  "name": "kpi-dashboard",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@supabase/supabase-js": "^2.39.0",
    "next": "14.1.0",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "react-calendar": "^4.9.0"
  },
  "devDependencies": {
    "eslint": "8.57.0",
    "eslint-config-next": "14.1.0"
  }
{
  "version": 2,
  "buildCommand": "next build",
  "devCommand": "next dev",
  "installCommand": "npm install"
}
import { useState, useEffect } from 'react';
import { createClient } from '@supabase/supabase-js';
import Auth from '../components/Auth';
import Dashboard from '../components/Dashboard';

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.NEXT_PUBLIC_SUPABASE_KEY
);

export default function Home() {
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const getSession = async () => {
      const { data: { session } } = await supabase.auth.getSession();
      setUser(session?.user || null);
      setLoading(false);
    };
    getSession();

    const { data: { subscription } } = supabase.auth.onAuthStateChange(
      (event, session) => {
        setUser(session?.user || null);
        setLoading(false);
      }
    );

    return () => subscription.unsubscribe();
  }, []);

  if (loading) return <div>Loading...</div>;

  return (
    <div className="container">
      {!user ? <Auth supabase={supabase} /> : <Dashboard user={user} supabase={supabase} />}
    </div>
  );
}
export default function handler(req, res) {
  res.status(200).json({ message: 'KPI API is working!' });
}
export default function Auth({ supabase }) {
  const handleLogin = async () => {
    const { error } = await supabase.auth.signInWithPassword({
      email: 'getu.mamo@segon-marill.com',
      password: 'your-admin-password'
    });
    if (error) alert(error.message);
  };

  return (
    <div className="auth">
      <h1>KPI Dashboard</h1>
      <button onClick={handleLogin}>Login with Segon-Marill Email</button>
    </div>
  );
}
git add .
git commit -m "Fixed Next.js structure"
git push origin main
}
